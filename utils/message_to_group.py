from config.config import Config
import aiohttp
import re
from icecream import ic






async def send_message_to_group(response2: str) -> None:
    message_text = response2  # –¢–µ–∫—Å—Ç –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è


    # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–º–æ—â—å—é —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π
    details = {}
    details['–¢–æ–≤–∞—Ä'] = re.search(r"–¢–æ–≤–∞—Ä:\s*([^|]+)", message_text).group(1).strip()
    details['–ò–º—è'] = re.search(r"–ò–º—è:\s*([^|]+)", message_text).group(1).strip()
    details['–ù–æ–º–µ—Ä'] = re.search(r"–ù–æ–º–µ—Ä:\s*[^\d]*([\d\s()-]+)", message_text).group(1).strip()
    details['–ê–¥—Ä–µ—Å'] = re.search(r"–ê–¥—Ä–µ—Å:\s*([^|]+)", message_text).group(1).strip()
    details['–°–ø–æ—Å–æ–± –û–ø–ª–∞—Ç—ã'] = re.search(r"–°–ø–æ—Å–æ–± –û–ø–ª–∞—Ç—ã:\s*([^|]+)", message_text).group(1).strip()
    details['–ß–µ–∫'] = re.search(r"–ß–µ–∫:\s*([^|]+)", message_text).group(1).strip()
    details['–í—Ä–µ–º—è –î–æ—Å—Ç–∞–≤–∫–∏'] = re.search(r"–í—Ä–µ–º—è –î–æ—Å—Ç–∞–≤–∫–∏:\s*([^|]+)", message_text).group(1).strip()
    details['–î–∞—Ç–∞ –î–æ—Å—Ç–∞–≤–∫–∏'] = re.search(r"–î–∞—Ç–∞ –î–æ—Å—Ç–∞–≤–∫–∏:\s*([^|]+)", message_text).group(1).strip()




    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ "–ü–µ—Ä–µ–Ω–µ—Å—Ç–∏ —Å–¥–µ–ª–∫—É: Yes" –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
    if re.search(r"–ü–µ—Ä–µ–Ω–µ—Å—Ç–∏\s*—Å–¥–µ–ª–∫—É:\s*Yes\s*\|", response2):
        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω–∞ –ø—Ä–∏–ø–∏—Å–∫–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        formatted_message = (
            "‚ùó**–ù–æ–≤—ã–π –ó–∞–∫–∞–∑**‚ùó\n\n"  # –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –º–µ–∂–¥—É –∑–∞–≥–æ–ª–æ–≤–∫–æ–º –∏ –æ—Å–Ω–æ–≤–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
            f"üçñ–ó–∞–∫–∞–∑: {details['–¢–æ–≤–∞—Ä']} \n"
            f"‚úçÔ∏è–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞: {details['–ò–º—è']} \n"
            f"üì±–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {details['–ù–æ–º–µ—Ä']} \n"
            f"üè†–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏: {details['–ê–¥—Ä–µ—Å']} \n"
            f"üí≥–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: {details['–°–ø–æ—Å–æ–± –û–ø–ª–∞—Ç—ã']} \n"
            f"üíµ–ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ –æ–ø–ª–∞—Ç—ã: {details['–ß–µ–∫']} —Å—É–º \n"
            f"‚åõ–í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏: {details['–í—Ä–µ–º—è –î–æ—Å—Ç–∞–≤–∫–∏']} \n"
            f"üìÖ–¥–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏: {details['–î–∞—Ç–∞ –î–æ—Å—Ç–∞–≤–∫–∏']} \n"

        )


        try:

            url = f'https://api.telegram.org/bot{Config.TG_BOT_TOKEN}/sendMessage'
            payload = {
                'chat_id': Config.ORDER_GROUP_ID,
                'text': formatted_message
            }
            async with aiohttp.ClientSession() as session:
                await session.post(url, data=payload)


            ic("–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
        except Exception as e:
            ic(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
    else:
        ic("–ü—Ä–∏–ø–∏—Å–∫–∞ '–ü–µ—Ä–µ–Ω–µ—Å—Ç–∏ —Å–¥–µ–ª–∫—É: Yes' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
